---
interface BreadcrumbItem {
  name: string;
  url: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;

// Build breadcrumb list for structured data
const breadcrumbList = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    "item": `https://elegantlashesbykatie.com${item.url}`
  }))
};
---

<!-- Breadcrumb Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbList)} />

<!-- Visual Breadcrumbs (optional, can be enabled) -->
<nav aria-label="Breadcrumb" class="hidden">
  <ol class="flex items-center space-x-2 text-sm text-mediumtext">
    {items.map((item, index) => (
      <li class="flex items-center">
        {index > 0 && <span class="mx-2">/</span>}
        {index === items.length - 1 ? (
          <span class="text-darktext font-medium">{item.name}</span>
        ) : (
          <a href={item.url} class="hover:text-primary transition-colors">
            {item.name}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>
